@function inverse-side($side) {
  @if			$side == top		{ @return bottom; }
  @else if $side == bottom { @return top; }
  @else if $side == left	 { @return right; }
  @else if $side == right	{ @return left; }
}

@mixin linear-gradient($gradientLine, $colorStops...) {
  background-image: -webkit-linear-gradient($gradientLine, $colorStops);
  background-image:		-moz-linear-gradient($gradientLine, $colorStops);
  background-image:			-o-linear-gradient($gradientLine, $colorStops);
  @if length($gradientLine) == 2 {
    background-image:				 linear-gradient(to #{inverse-side(nth($gradientLine, 1))} #{inverse-side(nth($gradientLine, 2))}, $colorStops);
  } @else {
    background-image:				 linear-gradient(to #{inverse-side($gradientLine)}, $colorStops);
  }
}

@mixin linear-gradient-with-image($imgSrc, $gradientLine, $colorStops...) {
  background-image: $imgSrc, -webkit-linear-gradient($gradientLine, $colorStops);
  background-image:	$imgSrc, 	-moz-linear-gradient($gradientLine, $colorStops);
  background-image:	$imgSrc, 		-o-linear-gradient($gradientLine, $colorStops);
  @if length($gradientLine) == 2 {
    background-image:				 $imgSrc, linear-gradient(to #{inverse-side(nth($gradientLine, 1))} #{inverse-side(nth($gradientLine, 2))}, $colorStops);
  } @else {
    background-image:				 $imgSrc, linear-gradient(to #{inverse-side($gradientLine)}, $colorStops);
  }
}

@mixin radial-gradient($gradient...) {
  background-image: -webkit-radial-gradient($gradient);
  background-image:		-moz-radial-gradient($gradient);
  background-image:			-o-radial-gradient($gradient);
  background-image:				 radial-gradient($gradient);
}
